<templateSet group="Bloc">
  <template name="blocconsumer" value="BlocConsumer&lt;$Subject$$EnumCubit$, $Subject$State&gt;(&#10;  listener: (context, state) {},&#10;  builder: (context, state) {&#10;    return $Container$;&#10;  },&#10;)" description="BlocConsumer widget" toReformat="false" toShortenFQNames="true">
    <variable name="Subject" expression="" defaultValue="&quot;Subject&quot;" alwaysStopAt="true" />
    <variable name="EnumCubit" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="Container" expression="" defaultValue="&quot;Container()&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="read" value="context.read&lt;$Subject$$Cubit$&gt;()" description="context.read()" toReformat="false" toShortenFQNames="true">
    <variable name="Subject" expression="" defaultValue="&quot;Subject&quot;" alwaysStopAt="true" />
    <variable name="Cubit" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="bloc" value="class $Subject$Bloc extends Bloc&lt;$Subject$Event, $Subject$State&gt; {&#10;  $Subject$Bloc() : super($Subject$Initial());&#10;&#10;  @override&#10;  Stream&lt;$Subject$State&gt; mapEventToState($Subject$Event event) async* {&#10;    // TODO: implement mapEventToState&#10;  }&#10;}" description="bloc class" toReformat="true" toShortenFQNames="true">
    <variable name="Subject" expression="" defaultValue="&quot;Subject&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="feventmap" value="Stream&lt;$BASE_CLASS_NAME$State&gt; _map$eventName$EventToState($eventName$Event event) async* {&#10;&#10;}" description="map event to state function with freeze.map function" toReformat="false" toShortenFQNames="true">
    <variable name="BASE_CLASS_NAME" expression="regularExpression(dartClassName(), &quot;(Bloc)|(Cubit)&quot;, &quot;&quot;)" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="eventName" expression="" defaultValue="&quot;eventName&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="feventwhen" value="Stream&lt;$BASE_CLASS_NAME$State&gt; _map$eventName$EventToState() async* {&#10;&#10;}" description="map event to state function with freeze.when function" toReformat="false" toShortenFQNames="true">
    <variable name="BASE_CLASS_NAME" expression="regularExpression(dartClassName(), &quot;(Bloc)|(Cubit)&quot;, &quot;&quot;)" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="eventName" expression="" defaultValue="&quot;eventName&quot;" alwaysStopAt="true" />
    <context />
  </template>
</templateSet>